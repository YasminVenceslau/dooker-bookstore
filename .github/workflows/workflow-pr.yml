name: Python Pull Request Workflow

on: [pull_request]

jobs:
  qa:
    name: Quality check
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Faz checkout do código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Configura o Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      # 3️⃣ Cache do Poetry e pip para acelerar o workflow
      - name: Cache Poetry and pip
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      # 4️⃣ Instala Poetry
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      # 5️⃣ Verifica configuração do Poetry
      - name: Check Poetry configuration
        run: poetry check

      # 6️⃣ Instala dependências do projeto
      - name: Install dependencies
        run: poetry install --with dev

      # 7️⃣ Executa os testes
      - name: Run tests
        run: poetry run python manage.py test

      # 8️⃣ Linting do código
      - name: Lint code
        uses: wemake-services/wemake-python-styleguide@0.16.0
        continue-on-error: true
        with:
          reporter: 'github-pr-review'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
