name: Python application
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
        poetry-version: [1.2.0, 1.3.2]

    steps:
    # 1️⃣ Checkout do código
    - uses: actions/checkout@v3

    # 2️⃣ Configurar Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # 3️⃣ Cache das dependências do Poetry e pip
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry
          ~/.cache/pip
        key: ${{ runner.os }}-poetry-${{ matrix.poetry-version }}-python-${{ matrix.python-version }}
        restore-keys: |
          ${{ runner.os }}-poetry-${{ matrix.poetry-version }}-

    # 4️⃣ Instalar Poetry via pip (mais confiável)
    - name: Install Poetry ${{ matrix.poetry-version }}
      run: |
        python -m pip install --upgrade pip
        pip install "poetry==${{ matrix.poetry-version }}"
        poetry --version

    # 5️⃣ Instalar dependências do projeto
    - name: Install dependencies
      run: poetry install --no-interaction --no-ansi

    # 6️⃣ Rodar testes do Django
    - name: Run tests
      run: poetry run python manage.py test
